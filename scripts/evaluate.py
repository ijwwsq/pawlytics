import os
import random
import tensorflow as tf
from tensorflow.keras.preprocessing import image
import numpy as np

# –ó–∞–≥—Ä—É–∂–∞–µ–º –º–æ–¥–µ–ª—å
model = tf.keras.models.load_model("models/best_model.h5")

# –ü–∞–ø–∫–∏ —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –∫–∞—Ä—Ç–∏–Ω–∫–∞–º–∏
base_path = "/home/egor/code/ml/data/cats_dogs"
cat_folder = os.path.join(base_path, "cats")
dog_folder = os.path.join(base_path, "dogs")

correct = 0
total = 0
sample_size = 200  # –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–∞—Ä—Ç–∏–Ω–æ–∫ –¥–ª—è —Ç–µ—Å—Ç–∞

print("---")

def check_images(folder, true_label):
    global correct, total
    files = [f for f in os.listdir(folder) if os.path.isfile(os.path.join(folder, f))]
    random.shuffle(files)  # –ü–µ—Ä–µ–º–µ—à–∏–≤–∞–µ–º —Ñ–∞–π–ª—ã
    files = files[:sample_size]  # –ë–µ—Ä—ë–º —Ç–æ–ª—å–∫–æ 1000 –∫–∞—Ä—Ç–∏–Ω–æ–∫

    for filename in files:
        img_path = os.path.join(folder, filename)

        # –ó–∞–≥—Ä—É–∂–∞–µ–º –∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–∞—Ä—Ç–∏–Ω–∫—É
        img = image.load_img(img_path, target_size=(128, 128))
        img_array = image.img_to_array(img) / 255.0
        img_array = np.expand_dims(img_array, axis=0)

        # –ü—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ
        prediction = model.predict(img_array, verbose=0)[0][0]
        predicted_label = "dog" if prediction > 0.5 else "cat"

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –ø—Ä–∞–≤–∏–ª—å–Ω–æ –ª–∏ —É–≥–∞–¥–∞–ª–∞ –º–æ–¥–µ–ª—å
        if predicted_label == true_label:
            correct += 1
        
        total += 1

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±–µ –ø–∞–ø–∫–∏ (–ø–æ 1000 –∫–∞—Ä—Ç–∏–Ω–æ–∫)
check_images(cat_folder, "cat")
check_images(dog_folder, "dog")

# –í—ã–≤–æ–¥–∏–º —Ç–æ—á–Ω–æ—Å—Ç—å
accuracy = (correct / total) * 100
print(f"üìä –¢–æ—á–Ω–æ—Å—Ç—å –º–æ–¥–µ–ª–∏ –Ω–∞ 2000 –∫–∞—Ä—Ç–∏–Ω–∫–∞—Ö: {accuracy:.2f}% ({correct}/{total})")
